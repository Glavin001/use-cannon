import { useContext } from 'react'
import { Canvas } from '@react-three/fiber'
import { Physics, useSphere } from '@react-three/cannon'

import type { PropsWithChildren } from 'react'
import type { Triplet } from '@react-three/cannon'

import { ChainLink, parent } from './Chain'

function TearableChainLink({ children }: PropsWithChildren<{}>) {
  return (
    <ChainLink size={[0.5, 2, 0.15]} maxMultiplier={1000}>
      {children}
    </ChainLink>
  )
}

const Handle = ({ children, radius }: PropsWithChildren<{ radius: number }>) => {
  const position: Triplet = [5, 10, -10]
  const [ref] = useSphere(() => ({ type: 'Static', args: [radius], position }))
  return (
    <group>
      <mesh ref={ref}>
        <sphereBufferGeometry args={[radius, 64, 64]} />
        <meshStandardMaterial />
      </mesh>
      <parent.Provider value={{ ref, position }}>{children}</parent.Provider>
    </group>
  )
}

const Projectile = ({ radius }: { radius: number }) => {
  const { position: parentPos } = useContext(parent)
  const position: Triplet = [-40, 10, parentPos[2]]
  const [ref] = useSphere(() => ({
    type: 'Dynamic',
    mass: 10,
    args: [radius],
    position,
    velocity: [60, 0, 0],
  }))
  return (
    <group>
      <mesh ref={ref}>
        <sphereBufferGeometry args={[radius, 64, 64]} />
        <meshStandardMaterial />
      </mesh>
    </group>
  )
}

const ChainScene = () => {
  return (
    <Canvas shadows camera={{ position: [0, 5, 20], fov: 50 }}>
      <color attach="background" args={['#171720']} />
      <ambientLight intensity={0.5} />
      <pointLight position={[-10, -10, -10]} />
      <spotLight position={[10, 10, 10]} angle={0.3} penumbra={1} intensity={1} castShadow />
      <Physics gravity={[0, -40, 0]} allowSleep={false}>
        <Handle radius={0.5}>
          <Projectile radius={2.0} />
          <TearableChainLink>
            <TearableChainLink>
              <TearableChainLink>
                <TearableChainLink>
                  <TearableChainLink>
                    <TearableChainLink>
                      <TearableChainLink>
                        <TearableChainLink>
                          <TearableChainLink>
                            <TearableChainLink>
                              <TearableChainLink>
                                <TearableChainLink>
                                  <TearableChainLink />
                                </TearableChainLink>
                              </TearableChainLink>
                            </TearableChainLink>
                          </TearableChainLink>
                        </TearableChainLink>
                      </TearableChainLink>
                    </TearableChainLink>
                  </TearableChainLink>
                </TearableChainLink>
              </TearableChainLink>
            </TearableChainLink>
          </TearableChainLink>
        </Handle>
      </Physics>
    </Canvas>
  )
}

export default ChainScene
